#!/bin/bash

# Find files (excluding hidden) with fzf
zz() {
  local selected_file
  selected_file=$(find . -type f -not -path "*/\.*" | fzf)
  if [[ -n "$selected_file" ]]; then
    cd "$(dirname "$selected_file")"
  fi
}

# Search command history with fzf
fhist() {
  local cmd
  cmd=$(history | fzf --tac | sed 's/ *[0-9]* *//')
  if [[ -n "$cmd" ]]; then
    echo "$cmd"
    eval "$cmd"
  fi
}

# extract - Extrae cualquier archivo comprimido automáticamente
extract() {
  if [ -f $1 ]; then
    case $1 in
    *.tar.bz2) tar xjf $1 ;;
    *.tar.gz) tar xzf $1 ;;
    *.bz2) bunzip2 $1 ;;
    *.rar) unrar e $1 ;;
    *.gz) gunzip $1 ;;
    *.tar) tar xf $1 ;;
    *.tbz2) tar xjf $1 ;;
    *.tgz) tar xzf $1 ;;
    *.zip) unzip $1 ;;
    *.Z) uncompress $1 ;;
    *.7z) 7z x $1 ;;
    *) echo "'$1' no se puede extraer" ;;
    esac
  else
    echo "'$1' no es un archivo válido"
  fi
}

setConf() {
  local target_dir="$HOME/.config"

  # Verificar si se proporcionaron argumentos
  if [ $# -eq 0 ]; then
    echo "Error: Debes proporcionar al menos un paquete"
    echo "Uso: setConf paquete1 [paquete2 ...]"
    return 1
  fi

  # Procesar cada paquete recibido como argumento
  for package in "$@"; do
    # Eliminar la barra final si existe
    package=${package%/}

    local source_dir="$(pwd)/$package"

    # Verificar si el paquete existe
    if [ ! -d "$source_dir" ]; then
      echo "Error: El paquete '$package' no existe en el directorio actual"
      continue
    fi

    echo "Creando enlace simbólico para '$package'..."

    # Crear el enlace dentro de ~/.config/
    local target="$target_dir/$package"

    # Si ya existe un enlace, actualizarlo
    if [ -e "$target" ]; then
      if [ -L "$target" ]; then
        echo "El enlace '$target' ya existe, actualizando..."
        rm "$target"
      else
        echo "¡Advertencia! '$target' ya existe y no es un enlace simbólico."
        read -p "¿Deseas sobreescribirlo? (s/n): " answer
        if [ "$answer" != "s" ]; then
          echo "Omitiendo '$package'"
          continue
        fi
        rm -rf "$target"
      fi
    fi

    # Crear el enlace simbólico
    ln -s "$source_dir" "$target"
    echo "Enlace creado: $target -> $source_dir"
  done

  echo "¡Completado!"
}
